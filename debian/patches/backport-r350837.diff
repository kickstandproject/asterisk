--- a/autoconf/ast_gcc_attribute.m4
+++ b/autoconf/ast_gcc_attribute.m4
@@ -11,8 +11,8 @@ m4_ifval([$4],$4=0)
 if test "x$2" = "x"
 then
 AC_COMPILE_IFELSE(
-	AC_LANG_PROGRAM([$3 void __attribute__(($1)) *test(void *muffin, ...) {return (void *) 0;}],
-			[]),
+	[AC_LANG_PROGRAM([$3 void __attribute__(($1)) *test(void *muffin, ...) {return (void *) 0;}],
+			[])],
 	AC_MSG_RESULT(yes)
 	m4_ifval([$4],$4=1)
 	AC_DEFINE_UNQUOTED([HAVE_ATTRIBUTE_$1], 1, [Define to 1 if your GCC C compiler supports the '$1' attribute.]),
@@ -20,8 +20,8 @@ AC_COMPILE_IFELSE(
 )
 else
 AC_COMPILE_IFELSE(
-	AC_LANG_PROGRAM([$3 void __attribute__(($2)) *test(void *muffin, ...) {return (void *) 0;}],
-			[]),
+	[AC_LANG_PROGRAM([$3 void __attribute__(($2)) *test(void *muffin, ...) {return (void *) 0;}],
+			[])],
 	AC_MSG_RESULT(yes)
 	m4_ifval([$4],$4=1)
 	AC_DEFINE_UNQUOTED([HAVE_ATTRIBUTE_$1], 1, [Define to 1 if your GCC C compiler supports the '$1' attribute.]),
--- a/autoconf/libcurl.m4
+++ b/autoconf/libcurl.m4
@@ -143,7 +143,7 @@ AC_DEFUN([AST_LIBCURL_CHECK_CONFIG],
            _libcurl_save_libs=$LIBS
            LIBS="$CURL_LIB $LIBS"
 
-           AC_LINK_IFELSE(AC_LANG_PROGRAM([#include <curl/curl.h>],[
+           AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <curl/curl.h>],[
 /* Try and use a few common options to force a failure if we are
    missing symbols or can't link. */
 int x;
@@ -154,7 +154,7 @@ x=CURLOPT_FILE;
 x=CURLOPT_ERRORBUFFER;
 x=CURLOPT_STDERR;
 x=CURLOPT_VERBOSE;
-]),libcurl_cv_lib_curl_usable=yes,libcurl_cv_lib_curl_usable=no)
+])],libcurl_cv_lib_curl_usable=yes,libcurl_cv_lib_curl_usable=no)
 
            CPPFLAGS=$_libcurl_save_cppflags
            LIBS=$_libcurl_save_libs
--- a/configure.ac
+++ b/configure.ac
@@ -534,8 +534,8 @@ fi
 
 AC_MSG_CHECKING(for LLONG_MAX in limits.h)
 AC_LINK_IFELSE(
-	AC_LANG_PROGRAM([#include <limits.h>],
-		[long long foo = LLONG_MAX]),
+	[AC_LANG_PROGRAM([#include <limits.h>],
+		[long long foo = LLONG_MAX])],
 	AC_MSG_RESULT(yes)
 	AC_DEFINE([HAVE_LLONG_MAX], 1, [Define to 1 if limits.h includes a LLONG_MAX definition.]),
 	AC_MSG_RESULT(no)
@@ -543,8 +543,8 @@ AC_LINK_IFELSE(
 
 AC_MSG_CHECKING(for timersub in time.h)
 AC_LINK_IFELSE(
-	AC_LANG_PROGRAM([#include <sys/time.h>],
-		[struct timeval *a; timersub(a, a, a);]),
+	[AC_LANG_PROGRAM([#include <sys/time.h>],
+		[struct timeval *a; timersub(a, a, a);])],
 	AC_MSG_RESULT(yes)
 		AC_DEFINE([HAVE_TIMERSUB], 1, [Define to 1 if your system defines timersub.]),
 	AC_MSG_RESULT(no)
@@ -560,7 +560,7 @@ _ACEOF
 LDFLAGS="${LDFLAGS} -Wl,--dynamic-list,conftest.dynamics"
 PBX_DYNAMIC_LIST=0
 AC_LINK_IFELSE(
-	AC_LANG_PROGRAM([], []),
+	[AC_LANG_PROGRAM([], [])],
 	PBX_DYNAMIC_LIST=1
 	AC_MSG_RESULT(yes),
 	AC_MSG_RESULT(no)
@@ -595,8 +595,8 @@ AC_CHECK_FUNCS([inet_aton])
 # check if we have IP_PKTINFO constant defined
 AC_MSG_CHECKING(for IP_PKTINFO)
 AC_LINK_IFELSE(
-		AC_LANG_PROGRAM([#include <netinet/in.h>],
-						[int pi = IP_PKTINFO;]),
+		[AC_LANG_PROGRAM([#include <netinet/in.h>],
+						[int pi = IP_PKTINFO;])],
 		AC_MSG_RESULT(yes)
 		AC_DEFINE([HAVE_PKTINFO], 1, [Define to 1 if your system defines IP_PKTINFO.]),
 		AC_MSG_RESULT(no)
@@ -607,9 +607,9 @@ AC_SEARCH_LIBS(gethostbyname_r, [socket 
 
 AC_MSG_CHECKING(for gethostbyname_r with 6 arguments)
 AC_LINK_IFELSE(
-        AC_LANG_PROGRAM([#include <stdlib.h>
+        [AC_LANG_PROGRAM([#include <stdlib.h>
                          #include <netdb.h>],
-                        [struct hostent *he = gethostbyname_r((const char *)NULL, (struct hostent *)NULL, (char *)NULL, (int)0, (struct hostent **)NULL, (int *)NULL);]),
+                        [struct hostent *he = gethostbyname_r((const char *)NULL, (struct hostent *)NULL, (char *)NULL, (int)0, (struct hostent **)NULL, (int *)NULL);])],
         AC_MSG_RESULT(yes)
         AC_DEFINE([HAVE_GETHOSTBYNAME_R_6], 1, [Define to 1 if your system has gethostbyname_r with 6 arguments.]),
         AC_MSG_RESULT(no)
@@ -617,9 +617,9 @@ AC_LINK_IFELSE(
 
 AC_MSG_CHECKING(for gethostbyname_r with 5 arguments)
 AC_LINK_IFELSE(
-        AC_LANG_PROGRAM([#include <stdlib.h>
+        [AC_LANG_PROGRAM([#include <stdlib.h>
 	                 #include <netdb.h>],
-                        [struct hostent *he = gethostbyname_r((const char *)NULL, (struct hostent *)NULL, (char *)NULL, (int)0, (int *)NULL);]),
+                        [struct hostent *he = gethostbyname_r((const char *)NULL, (struct hostent *)NULL, (char *)NULL, (int)0, (int *)NULL);])],
         AC_MSG_RESULT(yes)
         AC_DEFINE([HAVE_GETHOSTBYNAME_R_5], 1, [Define to 1 if your system has gethostbyname_r with 5 arguments.]),
         AC_MSG_RESULT(no)
@@ -629,7 +629,7 @@ AC_CHECK_HEADER([byteswap.h], [AC_DEFINE
 
 AC_MSG_CHECKING(for __swap16 variant of <sys/endian.h> byteswapping macros)
 AC_LINK_IFELSE(
-AC_LANG_PROGRAM([#include <sys/endian.h>], [int a = 1; int b = __swap16(a);]),
+[AC_LANG_PROGRAM([#include <sys/endian.h>], [int a = 1; int b = __swap16(a);])],
 AC_MSG_RESULT(yes)
 AC_DEFINE([HAVE_SYS_ENDIAN_SWAP16], 1, [Define to 1 if your sys/endian.h header file provides the __swap16 macro.]),
 AC_MSG_RESULT(no)
@@ -637,7 +637,7 @@ AC_MSG_RESULT(no)
 
 AC_MSG_CHECKING(for bswap16 variant of <sys/endian.h> byteswapping macros)
 AC_LINK_IFELSE(
-AC_LANG_PROGRAM([#include <sys/endian.h>], [int a = 1; int b = bswap16(a);]),
+[AC_LANG_PROGRAM([#include <sys/endian.h>], [int a = 1; int b = bswap16(a);])],
 AC_MSG_RESULT(yes)
 AC_DEFINE([HAVE_SYS_ENDIAN_BSWAP16], 1, [Define to 1 if your sys/endian.h header file provides the bswap16 macro.]),
 AC_MSG_RESULT(no)
@@ -650,13 +650,13 @@ fi
 
 AC_MSG_CHECKING(for locale_t in locale.h)
 AC_LINK_IFELSE(
-AC_LANG_PROGRAM([#include <locale.h>], [locale_t lt = NULL]),
+[AC_LANG_PROGRAM([#include <locale.h>], [locale_t lt = NULL])],
 AC_MSG_RESULT(yes)
 AC_DEFINE([HAVE_LOCALE_T_IN_LOCALE_H], 1, [Define to 1 if your system defines the locale_t type in locale.h]),
 AC_MSG_RESULT(no)
   AC_MSG_CHECKING(for locale_t in xlocale.h)
   AC_LINK_IFELSE(
-  AC_LANG_PROGRAM([#include <xlocale.h>], [locale_t lt = NULL]),
+  [AC_LANG_PROGRAM([#include <xlocale.h>], [locale_t lt = NULL])],
   AC_MSG_RESULT(yes)
   AC_DEFINE([HAVE_LOCALE_T_IN_XLOCALE_H], 1, [Define to 1 if your system defines the locale_t type in xlocale.h]),
   AC_MSG_RESULT(no)
@@ -665,7 +665,7 @@ AC_MSG_RESULT(no)
 
 AC_MSG_CHECKING(for O_EVTONLY in fcntl.h)
 AC_LINK_IFELSE(
-AC_LANG_PROGRAM([#include <fcntl.h>], [int a = O_EVTONLY;]),
+[AC_LANG_PROGRAM([#include <fcntl.h>], [int a = O_EVTONLY;])],
 AC_MSG_RESULT(yes)
 AC_DEFINE([HAVE_O_EVTONLY], 1, [Define to 1 if your system defines the file flag O_EVTONLY in fcntl.h]),
 AC_MSG_RESULT(no)
@@ -673,7 +673,7 @@ AC_MSG_RESULT(no)
 
 AC_MSG_CHECKING(for O_SYMLINK in fcntl.h)
 AC_LINK_IFELSE(
-AC_LANG_PROGRAM([#include <fcntl.h>], [int a = O_SYMLINK;]),
+[AC_LANG_PROGRAM([#include <fcntl.h>], [int a = O_SYMLINK;])],
 AC_MSG_RESULT(yes)
 AC_DEFINE([HAVE_O_SYMLINK], 1, [Define to 1 if your system defines the file flag O_SYMLINK in fcntl.h]),
 AC_MSG_RESULT(no)
@@ -683,7 +683,7 @@ AST_C_DEFINE_CHECK([PTHREAD_RWLOCK_INITI
 
 AC_MSG_CHECKING(for PTHREAD_RWLOCK_PREFER_WRITER_NP in pthread.h)
 AC_LINK_IFELSE(
-AC_LANG_PROGRAM([#include <pthread.h>], [int a = PTHREAD_RWLOCK_PREFER_WRITER_NP;]),
+[AC_LANG_PROGRAM([#include <pthread.h>], [int a = PTHREAD_RWLOCK_PREFER_WRITER_NP;])],
 AC_MSG_RESULT(yes)
 AC_DEFINE([HAVE_PTHREAD_RWLOCK_PREFER_WRITER_NP], 1, [Define to 1 if your system defines PTHREAD_RWLOCK_PREFER_WRITER_NP in pthread.h]),
 AC_MSG_RESULT(no)
@@ -691,7 +691,7 @@ AC_MSG_RESULT(no)
 
 AC_MSG_CHECKING(for PTHREAD_MUTEX_RECURSIVE_NP in pthread.h)
 AC_LINK_IFELSE(
-AC_LANG_PROGRAM([#include <pthread.h>], [int a = PTHREAD_MUTEX_RECURSIVE_NP;]),
+[AC_LANG_PROGRAM([#include <pthread.h>], [int a = PTHREAD_MUTEX_RECURSIVE_NP;])],
 AC_MSG_RESULT(yes)
 AC_DEFINE([HAVE_PTHREAD_MUTEX_RECURSIVE_NP], 1, [Define to 1 if your system defines PTHREAD_MUTEX_RECURSIVE_NP in pthread.h]),
 AC_MSG_RESULT(no)
@@ -748,11 +748,11 @@ AST_C_DEFINE_CHECK([PTHREAD_RECURSIVE_MU
 # Generally yes on OpenBSD/FreeBSD and no on Mac OS X.
 AC_MSG_CHECKING(whether we can compare a mutex to its initial value)
 AC_LINK_IFELSE(
-	AC_LANG_PROGRAM([#include <pthread.h>], [pthread_mutex_t lock;
+	[AC_LANG_PROGRAM([#include <pthread.h>], [pthread_mutex_t lock;
 	if ((lock) != ((pthread_mutex_t) PTHREAD_MUTEX_INITIALIZER)) {
 		return 0;
 	}
-	return 0]),
+	return 0])],
 	AC_MSG_RESULT(yes)
 	AC_DEFINE([CAN_COMPARE_MUTEX_TO_INIT_VALUE], 1, [Define to 1 if your system's implementation of mutexes supports comparison of a mutex to its initializer.]),
 	AC_MSG_RESULT(no)
@@ -775,7 +775,7 @@ AC_LINK_IFELSE(
 
 AC_MSG_CHECKING(for compiler atomic operations)
 AC_LINK_IFELSE(
-AC_LANG_PROGRAM([], [int foo1; int foo2 = __sync_fetch_and_add(&foo1, 1);]),
+[AC_LANG_PROGRAM([], [int foo1; int foo2 = __sync_fetch_and_add(&foo1, 1);])],
 AC_MSG_RESULT(yes)
 AC_DEFINE([HAVE_GCC_ATOMICS], 1, [Define to 1 if your GCC C compiler provides atomic operations.]),
 AC_MSG_RESULT(no)
@@ -784,8 +784,8 @@ AC_MSG_RESULT(no)
 # glibc, AFAIK, is the only C library that makes printing a NULL to a string safe.
 AC_MSG_CHECKING([if your system printf is NULL-safe.])
 AC_RUN_IFELSE(
-	AC_LANG_PROGRAM([#include <stdio.h>],
-		[printf("%s", NULL)]),
+	[AC_LANG_PROGRAM([#include <stdio.h>],
+		[printf("%s", NULL)])],
 	AC_DEFINE([HAVE_NULLSAFE_PRINTF], 1, [Define to 1 if your C library can safely print NULL to string formats.])
 	AC_MSG_RESULT(yes),
 	AC_MSG_RESULT(no),
@@ -795,7 +795,7 @@ AC_RUN_IFELSE(
 
 AC_MSG_CHECKING(if we can increase the maximum select-able file descriptor)
 AC_RUN_IFELSE(
-AC_LANG_PROGRAM([
+[AC_LANG_PROGRAM([
 #include <stdio.h>
 #include <sys/select.h>
 #include <sys/time.h>
@@ -818,7 +818,7 @@ AC_LANG_PROGRAM([
 	FD_SET(fd0, (fd_set *) &fds);
 	FD_SET(fd1, (fd_set *) &fds);
 	if (select(FD_SETSIZE + 2, (fd_set *) &fds, NULL, NULL, &tv) < 0) { exit(1); }
-	exit(0)]]),
+	exit(0)]])],
 	AC_MSG_RESULT(yes)
 	AC_DEFINE([HAVE_VARIABLE_FDSET], 1, [Define to 1 if your system can support larger than default select bitmasks.]),
 	AC_MSG_RESULT(no),
@@ -827,11 +827,11 @@ AC_LANG_PROGRAM([
 
 if test "${ac_cv_have_variable_fdset}x" = "0x"; then
 	AC_RUN_IFELSE(
-		AC_LANG_PROGRAM([
+		[AC_LANG_PROGRAM([
 #include <unistd.h>
 #include <sys/types.h>
 #include <stdlib.h>
-], [if (getuid() != 0) { exit(1); }]),
+], [if (getuid() != 0) { exit(1); }])],
 		AC_DEFINE([CONFIGURE_RAN_AS_ROOT], 1, [Some configure tests will unexpectedly fail if configure is run by a non-root user.  These may be able to be tested at runtime.]))
 fi
 
@@ -850,13 +850,13 @@ AC_MSG_CHECKING(for -ffunction-sections 
 saved_CFLAGS="${CFLAGS}"
 CFLAGS="${CFLAGS} -ffunction-sections"
 AC_COMPILE_IFELSE(
-	AC_LANG_PROGRAM([], [int x = 1;]),
+	[AC_LANG_PROGRAM([], [int x = 1;])],
 	AC_MSG_RESULT(yes)
 	[saved_LDFLAGS="${LDFLAGS}"]
 	[LDFLAGS="${LDFLAGS} -Wl,--gc-sections"]
 	AC_MSG_CHECKING(for --gc-sections support)
 	AC_LINK_IFELSE(
-		AC_LANG_PROGRAM([], [int x = 1;]),
+		[AC_LANG_PROGRAM([], [int x = 1;])],
 		AC_MSG_RESULT(yes)
 		[GC_CFLAGS="-ffunction-sections"]
 		[[GC_LDFLAGS="-Wl,--gc-sections"]],
@@ -911,8 +911,8 @@ AC_SUBST(AST_SHADOW_WARNINGS)
 
 AC_MSG_CHECKING(for sysinfo)
 AC_LINK_IFELSE(
-        AC_LANG_PROGRAM([#include <sys/sysinfo.h>],
-                        [struct sysinfo sys_info; int uptime = sys_info.uptime]),
+        [AC_LANG_PROGRAM([#include <sys/sysinfo.h>],
+                        [struct sysinfo sys_info; int uptime = sys_info.uptime])],
         AC_MSG_RESULT(yes)
         AC_DEFINE([HAVE_SYSINFO], 1, [Define to 1 if your system has sysinfo support]),
         AC_MSG_RESULT(no)
@@ -921,7 +921,7 @@ AC_LINK_IFELSE(
 AC_SEARCH_LIBS(res_9_ninit, resolv)
 AC_MSG_CHECKING(for res_ninit)
 AC_LINK_IFELSE(
-	AC_LANG_PROGRAM([
+	[AC_LANG_PROGRAM([
 			#ifdef HAVE_SYS_SOCKET_H
 			#include <sys/socket.h>
 			#endif
@@ -932,13 +932,13 @@ AC_LINK_IFELSE(
 			#include <arpa/nameser.h>
 			#endif
 			#include <resolv.h>],
-			[int foo = res_ninit(NULL);]),
+			[int foo = res_ninit(NULL);])],
 	AC_MSG_RESULT(yes)
 	AC_DEFINE([HAVE_RES_NINIT], 1, [Define to 1 if your system has the re-entrant resolver functions.])
 	AC_SEARCH_LIBS(res_9_ndestroy, resolv)
 	AC_MSG_CHECKING(for res_ndestroy)
 	AC_LINK_IFELSE(
-		AC_LANG_PROGRAM([
+		[AC_LANG_PROGRAM([
 				#ifdef HAVE_SYS_SOCKET_H
 				#include <sys/socket.h>
 				#endif
@@ -949,7 +949,7 @@ AC_LINK_IFELSE(
 				#include <arpa/nameser.h>
 				#endif
 				#include <resolv.h>],
-				[res_ndestroy(NULL);]),
+				[res_ndestroy(NULL);])],
 		AC_MSG_RESULT(yes)
 		AC_DEFINE([HAVE_RES_NDESTROY], 1, [Define to 1 if your system has the ndestroy resolver function.]),
 		AC_MSG_RESULT(no)
@@ -957,7 +957,7 @@ AC_LINK_IFELSE(
 	AC_SEARCH_LIBS(res_9_close, resolv)
 	AC_MSG_CHECKING(for res_close)
 	AC_LINK_IFELSE(
-		AC_LANG_PROGRAM([
+		[AC_LANG_PROGRAM([
 				#ifdef HAVE_SYS_SOCKET_H
 				#include <sys/socket.h>
 				#endif
@@ -968,7 +968,7 @@ AC_LINK_IFELSE(
 				#include <arpa/nameser.h>
 				#endif
 				#include <resolv.h>],
-				[res_close();]),
+				[res_close();])],
 		AC_MSG_RESULT(yes)
 		AC_DEFINE([HAVE_RES_CLOSE], 1, [Define to 1 if your system has the close resolver function.]),
 		AC_MSG_RESULT(no)
@@ -1013,10 +1013,10 @@ PBX_DLADDR=0
 old_LIBS=${LIBS}
 LIBS="${LIBS} -ldl"
 AC_LINK_IFELSE(
-	AC_LANG_PROGRAM([#define _GNU_SOURCE 1
+	[AC_LANG_PROGRAM([#define _GNU_SOURCE 1
 #include <dlfcn.h>],
 		[dladdr((void *)0, (void *)0)]
-	),
+	)],
 	AC_MSG_RESULT(yes)
 	PBX_DLADDR=1
 	AC_SUBST([PBX_DLADDR])
@@ -1149,7 +1149,7 @@ if test "${USE_IMAP_TK}" != "no"; then
       	CPPFLAGS="${CPPFLAGS} ${imap_include}"
 	  	LIBS="${LIBS} ${imap_libs} "`echo ${imap_ldflags}`
 	  	AC_LINK_IFELSE(
-	    	AC_LANG_PROGRAM(
+	    	[AC_LANG_PROGRAM(
 				[#include "c-client.h"
 				void mm_searched (MAILSTREAM *stream,unsigned long number)
 				{
@@ -1199,13 +1199,13 @@ if test "${USE_IMAP_TK}" != "no"; then
 				[
 				MAILSTREAM *foo = mail_open(NULL, "", 0);
 				]
-			),
+			)],
 			[ac_cv_imap_tk="yes"],
 			[ac_cv_imap_tk="no"]
 	   	)
 		if test "${ac_cv_imap_tk}" = "yes"; then
 			AC_LINK_IFELSE(
-				AC_LANG_PROGRAM(
+				[AC_LANG_PROGRAM(
 					[#include "c-client.h"
 					void mm_searched (MAILSTREAM *stream,unsigned long number)
 					{
@@ -1255,7 +1255,7 @@ if test "${USE_IMAP_TK}" != "no"; then
 					[
 					long check = mail_expunge_full(NULL, "", 0);
 					]
-				),
+				)],
 				[ac_cv_imap_tk2006="yes"],
 				[ac_cv_imap_tk2006="no"]
 			)
@@ -1276,7 +1276,7 @@ if test "${USE_IMAP_TK}" != "no"; then
 				CPPFLAGS="${CPPFLAGS} ${imap_include}"
 				LIBS="${LIBS} ${imap_libs} ${imap_ldflags}"
 				AC_LINK_IFELSE(
-	    			AC_LANG_PROGRAM(
+	    			[AC_LANG_PROGRAM(
 						[#include "c-client.h"
 						void mm_searched (MAILSTREAM *stream,unsigned long number)
 						{
@@ -1326,13 +1326,13 @@ if test "${USE_IMAP_TK}" != "no"; then
 						[
 						MAILSTREAM *foo = mail_open(NULL, "", 0);
 						]
-					),
+					)],
 					[ac_cv_imap_tk="yes"],
 					[ac_cv_imap_tk="no"]
 	   			)
 				if test "${ac_cv_imap_tk}" = "yes"; then
 					AC_LINK_IFELSE(
-						AC_LANG_PROGRAM(
+						[AC_LANG_PROGRAM(
 							[#include "c-client.h"
 							void mm_searched (MAILSTREAM *stream,unsigned long number)
 							{
@@ -1382,7 +1382,7 @@ if test "${USE_IMAP_TK}" != "no"; then
 							[
 							long check = mail_expunge_full(NULL, "", 0);
 							]
-						),
+						)],
 						[ac_cv_imap_tk2006="yes"],
 						[ac_cv_imap_tk2006="no"]
 					)
@@ -1401,7 +1401,7 @@ if test "${USE_IMAP_TK}" != "no"; then
 		CPPFLAGS="${CPPFLAGS} ${imap_include}"
 		LIBS="${LIBS} ${imap_libs} "`echo ${imap_ldflags}`
 		AC_LINK_IFELSE(
-	    	AC_LANG_PROGRAM(
+	    	[AC_LANG_PROGRAM(
 				[#include <stdio.h>
 				#include <imap/c-client.h>
 				void mm_searched (MAILSTREAM *stream,unsigned long number)
@@ -1452,13 +1452,13 @@ if test "${USE_IMAP_TK}" != "no"; then
 				[
 				MAILSTREAM *foo = mail_open(NULL, "", 0);
 				]
-			),
+			)],
 			[ac_cv_imap_tk="yes"],
 			[ac_cv_imap_tk="no"]
 	   	)
 		if test "${ac_cv_imap_tk}" = "yes"; then
 			AC_LINK_IFELSE(
-				AC_LANG_PROGRAM(
+				[AC_LANG_PROGRAM(
 					[#include <stdio.h>
 					#include <imap/c-client.h>
 					void mm_searched (MAILSTREAM *stream,unsigned long number)
@@ -1509,7 +1509,7 @@ if test "${USE_IMAP_TK}" != "no"; then
 					[
 					long check = mail_expunge_full(NULL, "", 0);
 					]
-				),
+				)],
 				[ac_cv_imap_tk2006="yes"],
 				[ac_cv_imap_tk2006="no"]
 			)
@@ -1522,7 +1522,7 @@ if test "${USE_IMAP_TK}" != "no"; then
 			CPPFLAGS="${CPPFLAGS} ${imap_include}"
 			LIBS="${LIBS} ${imap_libs} "`echo ${imap_ldflags}`
 			AC_LINK_IFELSE(
-	    		AC_LANG_PROGRAM(
+	    		[AC_LANG_PROGRAM(
 					[#include <stdio.h>
 					#include <c-client/c-client.h>
 					void mm_searched (MAILSTREAM *stream,unsigned long number)
@@ -1573,13 +1573,13 @@ if test "${USE_IMAP_TK}" != "no"; then
 					[
 					MAILSTREAM *foo = mail_open(NULL, "", 0);
 					]
-				),
+				)],
 				[ac_cv_imap_tk="yes"],
 				[ac_cv_imap_tk="no"]
 	   		)
 			if test "${ac_cv_imap_tk}" = "yes"; then
 				AC_LINK_IFELSE(
-					AC_LANG_PROGRAM(
+					[AC_LANG_PROGRAM(
 						[#include <stdio.h>
 						#include <c-client/c-client.h>
 						void mm_searched (MAILSTREAM *stream,unsigned long number)
@@ -1630,7 +1630,7 @@ if test "${USE_IMAP_TK}" != "no"; then
 						[
 						long check = mail_expunge_full(NULL, "", 0);
 						]
-					),
+					)],
 					[ac_cv_imap_tk2006="yes"],
 					[ac_cv_imap_tk2006="no"]
 				)
@@ -2104,10 +2104,10 @@ if test "x${PBX_UNIXODBC}" = "x1" -o "x$
 	# Does ODBC support wide characters?
 	AC_MSG_CHECKING(whether ODBC has support for Unicode types)
 	AC_LINK_IFELSE(
-		AC_LANG_PROGRAM(
+		[AC_LANG_PROGRAM(
 			[#include <sql.h>
 #include <sqlext.h>],
-			[int foo = SQL_WCHAR]),
+			[int foo = SQL_WCHAR])],
 		AC_MSG_RESULT(yes)
 			AC_DEFINE([HAVE_ODBC_WCHAR], [1], [Define to 1 if your ODBC library has wide (Unicode) types.]),
 		AC_MSG_RESULT(no)
